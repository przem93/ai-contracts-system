services:
  proxy:
    image: nginx:alpine
    container_name: ai-contracts-proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      backend:
        condition: service_healthy
      frontend:
        condition: service_started
    restart: unless-stopped
    networks:
      - ai-contracts-network

  frontend:
    build: ./frontend
    container_name: ai-contracts-frontend
    expose:
      - "80"
    environment:
      - NODE_ENV=${NODE_ENV}
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
      - ./backend/openapi.json:/app/backend-openapi.json:ro
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - ai-contracts-network

  backend:
    build: ./backend
    container_name: ai-contracts-backend
    expose:
      - "3000"
    environment:
      - PORT=3000
      - NODE_ENV=${NODE_ENV:-production}
      - NEO4J_URI=bolt://graph-db:7687
      - NEO4J_USER=${NEO4J_USER}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      # CONTRACTS_PATH should be a glob pattern inside the container
      - CONTRACTS_PATH=${CONTRACTS_PATH:-/contracts/**/*.yml}
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
      # Mount contracts directory - CONTRACTS_HOST_DIR should be a directory path without glob
      - ${CONTRACTS_HOST_DIR:-./contracts}:/contracts:ro
    depends_on:
      graph-db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - ai-contracts-network

  backend-test-watch:
    build:
      context: ./backend
      dockerfile: Dockerfile.test
    container_name: ai-contracts-backend-test-watch
    environment:
      - NODE_ENV=development
    volumes:
      # Mount source code and test files
      - ./backend/src:/app/src:rw
      - ./backend/tsconfig.json:/app/tsconfig.json:ro
      - ./backend/nest-cli.json:/app/nest-cli.json:ro
      - ./backend/.eslintrc.js:/app/.eslintrc.js:ro
      # Mount contracts directory for tests
      - ${CONTRACTS_HOST_DIR:-./contracts}:/app/contracts:ro
    command: ["npm", "run", "test:watch", "--", "--watchAll"]
    profiles:
      - development
    networks:
      - ai-contracts-network

  graph-db:
    image: neo4j:5.15.0
    container_name: ai-contracts-graph-db
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=${NEO4J_USER}/${NEO4J_PASSWORD}
      - NEO4J_PLUGINS=${NEO4J_PLUGINS:-'["apoc"]'}
      - NEO4J_dbms_security_procedures_unrestricted=${NEO4J_UNRESTRICTED_PROCEDURES:-apoc.*}
      - NEO4J_dbms_memory_heap_initial__size=${NEO4J_HEAP_INITIAL_SIZE:-512M}
      - NEO4J_dbms_memory_heap_max__size=${NEO4J_HEAP_MAX_SIZE:-2G}
      - NEO4J_dbms_memory_pagecache_size=${NEO4J_PAGECACHE_SIZE:-512M}
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:7474 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - ai-contracts-network

networks:
  ai-contracts-network:
    driver: bridge
    internal: false

volumes:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:
